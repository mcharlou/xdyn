/*
 * bug_3207.cpp
 *
 *  Created on: Feb 8, 2018
 *      Author: cady
 */
#include <sstream>
#include "stl_data.hpp"
#include "hdb_data.hpp"
#include "yaml_data.hpp"



std::string test_data::issue_20()
{
    std::stringstream ss;
    ss << "rotations convention: [psi, theta', phi'']\n"
       << "\n"
       << "environmental constants:\n"
       << "    g: {value: 9.81, unit: m/s^2}\n"
       << "    rho: {value: 1025, unit: kg/m^3}\n"
       << "    nu: {value: 1.19e-6, unit: m^2/s}\n"
	   << "    air density: {value: 1.225, unit: kg/m^2}\n"
       << "\n"
       << "# Fixed frame: NED\n"
       << "bodies: # All bodies have NED as parent frame\n"
       << "  - name: kcs\n"
       << "    position of body frame relative to mesh:\n"
       << "        frame: mesh\n"
       << "        x: {value: 111.601, unit: m}\n"
       << "        y: {value: 0, unit: m}\n"
       << "        z: {value: -13.67, unit: m}\n"
       << "        phi: {value: 0, unit: rad}\n"
       << "        theta: {value: 0, unit: rad}\n"
       << "        psi: {value: 0, unit: rad}\n"
       << "    dynamics:\n"
       << "        hydrodynamic forces calculation point in body frame:\n"
       << "            x: {value: 0, unit: m}\n"
       << "            y: {value: 0, unit: m}\n"
       << "            z: {value: 6.47, unit: m}\n"
       << "        centre of inertia:\n"
       << "            frame: kcs\n"
       << "            x: {value: 0, unit: m}\n"
       << "            y: {value: 0, unit: m}\n"
       << "            z: {value: 0, unit: m} \n"
       << "        rigid body inertia matrix at the center of gravity and projected in the body frame:\n"
       << "            row 1: [5.3360e7,0,0,0,0,0]\n"
       << "            row 2: [0,5.3360e7,0,0,0,0]\n"
       << "            row 3: [0,0,5.3360e7,0,0,0]\n"
       << "            row 4: [0,0,0,7.556e09,0,0]\n"
       << "            row 5: [0,0,0,0,1.764e11,0]\n"
       << "            row 6: [0,0,0,0,0,1.764e11]\n"
       << "        added mass matrix at the center of gravity and projected in the body frame:\n"
       << "            row 1: [ 7.077294E+05, 0.000000E+00, 1.618488E+06, 0.000000E+00, 2.724195E+08, 0.000000E+00]\n"
       << "            row 2: [ 0.000000E+00, 1.202082E+07, 0.000000E+00, 8.201715E+06, 0.000000E+00, 2.966424E+07]\n"
       << "            row 3: [ 1.618488E+06, 0.000000E+00, 7.005200E+07, 0.000000E+00, 6.743791E+08, 0.000000E+00]\n"
       << "            row 4: [ 0.000000E+00, 8.201715E+06, 0.000000E+00, 1.080060E+09, 0.000000E+00, 1.555742E+09]\n"
       << "            row 5: [ 2.724195E+08, 0.000000E+00, 6.743791E+08, 0.000000E+00, 1.532607E+11, 0.000000E+00]\n"
       << "            row 6: [ 0.000000E+00, 2.966424E+07, 0.000000E+00, 1.555742E+09, 0.000000E+00, 4.894681E+10]\n"
       << "    initial position of body frame relative to NED:\n"
       << "        frame: NED\n"
       << "        x: {value: 0, unit: m}\n"
       << "        y: {value: 0, unit: m}\n"
       << "        z: {value: -2.81, unit: m}\n"
       << "        phi: {value: 0, unit: deg}\n"
       << "        theta: {value: -0.021, unit: deg}\n"
       << "        psi: {value: 0, unit: deg}\n"
       << "    initial velocity of body frame relative to NED:\n"
       << "        frame: kcs\n"
       << "        u: {value: 0, unit: m/s}\n"
       << "        v: {value: 0, unit: m/s}\n"
       << "        w: {value: 0, unit: m/s}\n"
       << "        p: {value: 0, unit: rad/s}\n"
       << "        q: {value: 0, unit: rad/s}\n"
       << "        r: {value: 0, unit: rad/s}\n"
       << "    blocked dof:\n"
       << "        from YAML:\n"
       << "            - state: u\n"
       << "              t: [0, 10000]\n"
       << "              value: [0, 0]\n"
       << "              interpolation: piecewise constant\n"
       << "            - state: r\n"
       << "              t: [0, 10000]\n"
       << "              value: [0, 0]\n"
       << "              interpolation: piecewise constant\n"
       << "    external forces:\n"
       << "      - model: resistance curve\n"
       << "        speed: {unit: m/s, values: [-1.00, -0.50, 0.00, 0.50, 1.00, 1.50, 2.00, 2.50, 3.00, 3.50, 4.00, 4.50, 5.00, 5.50, 6.00, 6.50, 7.00, 7.50, 8.00, 8.50, 9.00, 9.50, 10.00, 10.50, 11.00, 11.50, 12.00, 12.50, 13.00, 13.50, 14.00, 14.50, 15.00]}\n"
       << "        resistance: {unit: N, values: [-1.232E+04, -3.352E+03, 0.000E+00, 3.352E+03, 1.232E+04, 2.647E+04, 4.559E+04, 6.955E+04, 9.825E+04, 1.316E+05, 1.696E+05, 2.120E+05, 2.590E+05, 3.106E+05, 3.671E+05, 4.288E+05, 4.964E+05, 5.708E+05, 6.532E+05, 7.449E+05, 8.477E+05, 9.630E+05, 1.093E+06, 1.240E+06, 1.403E+06, 1.582E+06, 1.788E+06, 2.031E+06, 2.315E+06, 2.621E+06, 2.924E+06, 3.204E+06, 3.465E+06]}\n"
       << "      - model: linear damping\n"
       << "        damping matrix at the center of gravity projected in the body frame:\n"
       << "            row 1: [ 0, 0,         0,         0,         0, 0]\n"
       << "            row 2: [ 0, 0,         0,         0,         0, 0]\n"
       << "            row 3: [ 0, 0, 2.890E+07,         0,         0, 0]\n"
       << "            row 4: [ 0, 0,         0, 5.321E+07,         0, 0]\n"
       << "            row 5: [ 0, 0,         0,         0, 9.728E+10, 0]\n"
       << "            row 6: [ 0, 0,         0,         0,         0, 0]\n"
       << "      - model: quadratic damping\n"
       << "        damping matrix at the center of gravity projected in the body frame:\n"
       << "            row 1: [ 0, 0, 0,         0, 0, 0]\n"
       << "            row 2: [ 0, 0, 0,         0, 0, 0]\n"
       << "            row 3: [ 0, 0, 0,         0, 0, 0]\n"
       << "            row 4: [ 0, 0, 0, 1.972E+08, 0, 0]\n"
       << "            row 5: [ 0, 0, 0,         0, 0, 0]\n"
       << "            row 6: [ 0, 0, 0,         0, 0, 0]\n"
       << "      - model: constant force\n"
       << "        frame: NED\n"
       << "        x: {value: 0, unit: m}\n"
       << "        y: {value: 0, unit: m}\n"
       << "        z: {value: -3.48, unit: m}\n"
       << "        X: {value: 0, unit: kN}\n"
       << "        Y: {value: 3.6695e2, unit: kN}\n"
       << "        Z: {value: 0, unit: kN}\n"
       << "        K: {value: 0, unit: kN*m}\n"
       << "        M: {value: 0, unit: kN*m}\n"
       << "        N: {value: 0, unit: kN*m}\n"
       << "    controlled forces:\n"
       << "      - name: controller\n"
       << "        model: simple heading controller\n"
       << "        ksi: 3\n"
       << "        Tp: {value: 2, unit: s}\n"
       << "commands:\n"
       << "    - name: controller\n"
       << "      t: [0, 100000]\n"
       << "      psi_co: {unit: deg, values: [0., 0.]}\n"
       << "environment models:\n"
       << "  - model: no waves\n"
       << "    constant sea elevation in NED frame: {value: 0, unit: m}\n";
    return ss.str();
}
