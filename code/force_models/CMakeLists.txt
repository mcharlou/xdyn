cmake_minimum_required(VERSION 2.8.8)
project(force_models)

set(SRC src/QuadraticDampingForceModel.cpp
        src/GravityForceModel.cpp
        src/FastHydrostaticForceModel.cpp
        src/ExactHydrostaticForceModel.cpp
        src/FroudeKrylovForceModel.cpp
        src/DampingForceModel.cpp
        src/LinearDampingForceModel.cpp
        src/WageningenControlledForceModel.cpp
        src/ResistanceCurveForceModel.cpp
        src/DiffractionForceModel.cpp
        src/RadiationDampingForceModel.cpp
        src/SimpleHeadingKeepingController.cpp
        src/ManeuveringForceModel.cpp
        src/ManeuveringInternal.cpp
        src/maneuvering_compiler.cpp
        src/maneuvering_DataSource_builder.cpp
        src/SimpleStationKeepingController.cpp
        src/RudderForceModel.cpp
        src/HydrostaticForceModel.cpp
        src/calculate_gz.cpp
        src/GMForceModel.cpp
        src/KtKqForceModel.cpp
        src/AbstractWageningen.cpp
        src/LinearHydrostaticForceModel.cpp
        src/ConstantForceModel.cpp
        src/SailForceModel.cpp
        src/FlettnerRotorForceModel.cpp
        src/HoltropMennenForceModel.cpp
        src/EmpiricRollDampingForceModel.cpp
        src/MMGManoeuvringForceModel.cpp
        src/MMGRudderForceModel.cpp
        )

# Disabled virtual destructors warning in Boost
IF(("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang") OR ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU"))
    SET(CMAKE_CXX_FLAGS " -Woverloaded-virtual -Wwrite-strings -Wfatal-errors -Wno-deprecated -Wvariadic-macros -std=gnu++0x")
    IF(CMAKE_SIZEOF_VOID_P EQUAL 8) # If on a 64 bit machine
        IF(UNIX AND NOT WIN32) # If on Linux
            SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
            SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
            SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -fPIC")
        ENDIF()
    ENDIF()
ENDIF()


# Using C++ 2011
# The -std=c++0x option causes g++ to go into 'strict ANSI' mode so it doesn't declare non-standard functions
# (and _stricmp() is non-standard - it's just a version of strcmp() that's case-insensitive).
# Use -std=gnu++0x instead.
IF (NOT(MSVC))
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++0x")
ENDIF()

include_directories(inc)
include_directories(${ssc_INCLUDE_DIRS})
include_directories(${exceptions_INCLUDE_DIRS})
include_directories(SYSTEM ${eigen_INCLUDE_DIRS})
include_directories(${external_data_structures_INCLUDE_DIRS})
include_directories(${external_file_formats_INCLUDE_DIRS})
include_directories(${mesh_INCLUDE_DIRS})
include_directories(${environment_models_INCLUDE_DIRS})
include_directories(${yaml_parser_INCLUDE_DIRS})
include_directories(${hdb_interpolators_INCLUDE_DIRS})
include_directories(${core_INCLUDE_DIRS})
include_directories(SYSTEM ${Boost_INCLUDE_DIRS})
include_directories(SYSTEM ${YAML_CPP_INCLUDE_DIRS})

add_library (${PROJECT_NAME} OBJECT ${SRC})
set(${PROJECT_NAME}_INCLUDE_DIRS ${${PROJECT_NAME}_SOURCE_DIR}/inc CACHE PATH "Path to ${PROJECT_NAME}'s include directory")

add_subdirectory(unit_tests)
